{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/speedy/v1/Procurement": {
      "post": {
        "tags": [
          "Procurement"
        ],
        "summary": "Bulk create Procurement",
        "operationId": "BulkCreateProcurement",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProcurementRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateProcurementResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProcurementKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Procurement"
        ],
        "summary": "Bulk delete Procurement",
        "operationId": "BulkDeleteProcurement",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProcurementKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteProcurementResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProcurementKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Procurement{query}": {
      "get": {
        "tags": [
          "Procurement"
        ],
        "summary": "Filter Procurement",
        "operationId": "GetSomeProcurement",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredProcurementResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Procurement"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Procurement(id=\"{id}\")": {
      "get": {
        "tags": [
          "Procurement"
        ],
        "summary": "Get a(n) Procurement",
        "operationId": "GetProcurement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredProcurementResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Procurement"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Procurement"
        ],
        "summary": "Update a(n) Procurement",
        "operationId": "UpdateProcurement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProcurementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateProcurementResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Procurement"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Bulk create Order",
        "operationId": "BulkCreateOrder",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrderRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateOrderResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Bulk delete Order",
        "operationId": "BulkDeleteOrder",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteOrderResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Order{query}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Filter Order",
        "operationId": "GetSomeOrder",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredOrderResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Order(productId=\"{productId}\",supplierId=\"{supplierId}\")": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get a(n) Order",
        "operationId": "GetOrder",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredOrderResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Update a(n) Order",
        "operationId": "UpdateOrder",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "productId field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplierId field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateOrderResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Order"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/ValueTestEntity": {
      "post": {
        "tags": [
          "ValueTestEntity"
        ],
        "summary": "Bulk create ValueTestEntity",
        "operationId": "BulkCreateValueTestEntity",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateValueTestEntityRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateValueTestEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ValueTestEntityKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ValueTestEntity"
        ],
        "summary": "Bulk delete ValueTestEntity",
        "operationId": "BulkDeleteValueTestEntity",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueTestEntityKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteValueTestEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ValueTestEntityKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/ValueTestEntity{query}": {
      "get": {
        "tags": [
          "ValueTestEntity"
        ],
        "summary": "Filter ValueTestEntity",
        "operationId": "GetSomeValueTestEntity",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredValueTestEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ValueTestEntity"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/ValueTestEntity(id=\"{id}\")": {
      "get": {
        "tags": [
          "ValueTestEntity"
        ],
        "summary": "Get a(n) ValueTestEntity",
        "operationId": "GetValueTestEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredValueTestEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ValueTestEntity"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ValueTestEntity"
        ],
        "summary": "Update a(n) ValueTestEntity",
        "operationId": "UpdateValueTestEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateValueTestEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateValueTestEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/ValueTestEntity"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Company": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Bulk create Company",
        "operationId": "BulkCreateCompany",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCompanyRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateCompanyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Company"
        ],
        "summary": "Bulk delete Company",
        "operationId": "BulkDeleteCompany",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompanyKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteCompanyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Company{query}": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Filter Company",
        "operationId": "GetSomeCompany",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCompanyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Company(id=\"{id}\")": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get a(n) Company",
        "operationId": "GetCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCompanyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Company"
        ],
        "summary": "Update a(n) Company",
        "operationId": "UpdateCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateCompanyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Company"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/ExchangeRate": {
      "post": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "Bulk create ExchangeRate",
        "operationId": "BulkCreateExchangeRate",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateExchangeRateRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateExchangeRateResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExchangeRateKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "Bulk delete ExchangeRate",
        "operationId": "BulkDeleteExchangeRate",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExchangeRateKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteExchangeRateResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExchangeRateKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/ExchangeRate{query}": {
      "get": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "Filter ExchangeRate",
        "operationId": "GetSomeExchangeRate",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredExchangeRateResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExchangeRate"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/ExchangeRate(id=\"{id}\")": {
      "get": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "Get a(n) ExchangeRate",
        "operationId": "GetExchangeRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredExchangeRateResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExchangeRate"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "Update a(n) ExchangeRate",
        "operationId": "UpdateExchangeRate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExchangeRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateExchangeRateResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/ExchangeRate"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Bulk create Invoice",
        "operationId": "BulkCreateInvoice",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateInvoiceRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateInvoiceResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Bulk delete Invoice",
        "operationId": "BulkDeleteInvoice",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteInvoiceResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Invoice{query}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Filter Invoice",
        "operationId": "GetSomeInvoice",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredInvoiceResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Invoice(id=\"{id}\")": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get a(n) Invoice",
        "operationId": "GetInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredInvoiceResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update a(n) Invoice",
        "operationId": "UpdateInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateInvoiceResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Invoice"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Category": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Bulk create Category",
        "operationId": "BulkCreateCategory",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCategoryRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateCategoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CategoryKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Bulk delete Category",
        "operationId": "BulkDeleteCategory",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteCategoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CategoryKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Category{query}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Filter Category",
        "operationId": "GetSomeCategory",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCategoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Category(id=\"{id}\")": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get a(n) Category",
        "operationId": "GetCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCategoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update a(n) Category",
        "operationId": "UpdateCategory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateCategoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Category"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Bulk create User",
        "operationId": "BulkCreateUser",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateUserRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateUserResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Bulk delete User",
        "operationId": "BulkDeleteUser",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteUserResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/User{query}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Filter User",
        "operationId": "GetSomeUser",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredUserResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/User(id=\"{id}\")": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a(n) User",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredUserResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a(n) User",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateUserResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/User"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Bulk create Customer",
        "operationId": "BulkCreateCustomer",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCustomerRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateCustomerResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Bulk delete Customer",
        "operationId": "BulkDeleteCustomer",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteCustomerResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Customer{query}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Filter Customer",
        "operationId": "GetSomeCustomer",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCustomerResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Customer(id=\"{id}\")": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get a(n) Customer",
        "operationId": "GetCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCustomerResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update a(n) Customer",
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateCustomerResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Customer"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Bulk create Product",
        "operationId": "BulkCreateProduct",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProductRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateProductResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Bulk delete Product",
        "operationId": "BulkDeleteProduct",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteProductResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Product{query}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Filter Product",
        "operationId": "GetSomeProduct",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredProductResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Product(id=\"{id}\")": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a(n) Product",
        "operationId": "GetProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredProductResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update a(n) Product",
        "operationId": "UpdateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateProductResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Product"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/VirtualEntity": {
      "post": {
        "tags": [
          "VirtualEntity"
        ],
        "summary": "Bulk create VirtualEntity",
        "operationId": "BulkCreateVirtualEntity",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateVirtualEntityRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateVirtualEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VirtualEntityKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualEntity"
        ],
        "summary": "Bulk delete VirtualEntity",
        "operationId": "BulkDeleteVirtualEntity",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VirtualEntityKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteVirtualEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VirtualEntityKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/VirtualEntity{query}": {
      "get": {
        "tags": [
          "VirtualEntity"
        ],
        "summary": "Filter VirtualEntity",
        "operationId": "GetSomeVirtualEntity",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredVirtualEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VirtualEntity"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/VirtualEntity(id=\"{id}\")": {
      "get": {
        "tags": [
          "VirtualEntity"
        ],
        "summary": "Get a(n) VirtualEntity",
        "operationId": "GetVirtualEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredVirtualEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VirtualEntity"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualEntity"
        ],
        "summary": "Update a(n) VirtualEntity",
        "operationId": "UpdateVirtualEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVirtualEntityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateVirtualEntityResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/VirtualEntity"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Currency": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Bulk create Currency",
        "operationId": "BulkCreateCurrency",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateCurrencyRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateCurrencyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Bulk delete Currency",
        "operationId": "BulkDeleteCurrency",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CurrencyKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteCurrencyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CurrencyKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Currency{query}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Filter Currency",
        "operationId": "GetSomeCurrency",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCurrencyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Currency(id=\"{id}\")": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get a(n) Currency",
        "operationId": "GetCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredCurrencyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Update a(n) Currency",
        "operationId": "UpdateCurrency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCurrencyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateCurrencyResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Currency"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Supplier": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Bulk create Supplier",
        "operationId": "BulkCreateSupplier",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateSupplierRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateSupplierResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SupplierKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Bulk delete Supplier",
        "operationId": "BulkDeleteSupplier",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteSupplierResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SupplierKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Supplier{query}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Filter Supplier",
        "operationId": "GetSomeSupplier",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredSupplierResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Supplier"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Supplier(id=\"{id}\")": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get a(n) Supplier",
        "operationId": "GetSupplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredSupplierResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Supplier"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update a(n) Supplier",
        "operationId": "UpdateSupplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateSupplierResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Supplier"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Inventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Bulk create Inventory",
        "operationId": "BulkCreateInventory",
        "requestBody": {
          "description": "Fields needed for creation",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateInventoryRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkCreateInventoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InventoryKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "Bulk delete Inventory",
        "operationId": "BulkDeleteInventory",
        "requestBody": {
          "description": "Fields needed for deletion",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryKey"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "BulkDeleteInventoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InventoryKey"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Inventory{query}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Filter Inventory",
        "operationId": "GetSomeInventory",
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "these are queries on the entity",
            "required": true,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "example": "(id='1',amount=2)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredInventoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/speedy/v1/Inventory(id=\"{id}\")": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get a(n) Inventory",
        "operationId": "GetInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful fetch.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "FilteredInventoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inventory"
                      }
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Inventory"
        ],
        "summary": "Update a(n) Inventory",
        "operationId": "UpdateInventory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id field value.",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields needed for update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful update.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "UpdateInventoryResponse",
                  "type": "object",
                  "properties": {
                    "payload": {
                      "$ref": "#/components/schemas/Inventory"
                    },
                    "pageCount": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "pageIndex": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Procurement": {
        "type": "object",
        "properties": {
          "modifiedBy": {
            "type": "string"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "createdBy": {
            "type": "string"
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string"
          },
          "purchaseDate": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "ProcurementKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateProcurementRequest": {
        "required": [
          "dueAmount",
          "supplier",
          "product",
          "amount",
          "purchaseDate"
        ],
        "type": "object",
        "properties": {
          "modifiedBy": {
            "type": "string"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "createdBy": {
            "type": "string"
          },
          "supplier": {
            "$ref": "#/components/schemas/SupplierKey"
          },
          "product": {
            "$ref": "#/components/schemas/ProductKey"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "purchaseDate": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "UpdateProcurementRequest": {
        "required": [
          "dueAmount",
          "supplier",
          "product",
          "amount",
          "purchaseDate"
        ],
        "type": "object",
        "properties": {
          "modifiedBy": {
            "type": "string"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "createdBy": {
            "type": "string"
          },
          "supplier": {
            "$ref": "#/components/schemas/SupplierKey"
          },
          "product": {
            "$ref": "#/components/schemas/ProductKey"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "purchaseDate": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "supplier": {
            "$ref": "#/components/schemas/Supplier"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "orderDate": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "OrderKey": {
        "required": [
          "supplierId",
          "productId"
        ],
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          }
        }
      },
      "CreateOrderRequest": {
        "required": [
          "supplierId",
          "productId"
        ],
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "orderDate": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "UpdateOrderRequest": {
        "type": "object",
        "properties": {
          "discount": {
            "type": "number",
            "format": "double"
          },
          "orderDate": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ValueTestEntity": {
        "type": "object",
        "properties": {
          "instantTime": {
            "type": "string"
          },
          "localDateTime": {
            "type": "string"
          },
          "zonedDateTime": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "localDate": {
            "type": "string"
          },
          "localTime": {
            "type": "string"
          }
        }
      },
      "ValueTestEntityKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateValueTestEntityRequest": {
        "type": "object",
        "properties": {
          "instantTime": {
            "type": "string"
          },
          "localDateTime": {
            "type": "string"
          },
          "zonedDateTime": {
            "type": "string"
          },
          "localDate": {
            "type": "string"
          },
          "localTime": {
            "type": "string"
          }
        }
      },
      "UpdateValueTestEntityRequest": {
        "type": "object",
        "properties": {
          "instantTime": {
            "type": "string"
          },
          "localDateTime": {
            "type": "string"
          },
          "zonedDateTime": {
            "type": "string"
          },
          "localDate": {
            "type": "string"
          },
          "localTime": {
            "type": "string"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "defaultGenerator": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "detailsTop": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "extra": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CompanyKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateCompanyRequest": {
        "required": [
          "address",
          "name",
          "currency",
          "phone"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "defaultGenerator": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "detailsTop": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "extra": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UpdateCompanyRequest": {
        "required": [
          "address",
          "name",
          "currency",
          "phone"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "defaultGenerator": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "detailsTop": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "extra": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ExchangeRate": {
        "type": "object",
        "properties": {
          "exchangeRate": {
            "type": "number",
            "format": "double"
          },
          "invExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "baseCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "foreignCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "createdAt": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ExchangeRateKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateExchangeRateRequest": {
        "required": [
          "exchangeRate",
          "invExchangeRate",
          "baseCurrency",
          "foreignCurrency"
        ],
        "type": "object",
        "properties": {
          "exchangeRate": {
            "type": "number",
            "format": "double"
          },
          "invExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "baseCurrency": {
            "$ref": "#/components/schemas/CurrencyKey"
          },
          "foreignCurrency": {
            "$ref": "#/components/schemas/CurrencyKey"
          }
        }
      },
      "UpdateExchangeRateRequest": {
        "required": [
          "exchangeRate",
          "invExchangeRate",
          "baseCurrency",
          "foreignCurrency"
        ],
        "type": "object",
        "properties": {
          "exchangeRate": {
            "type": "number",
            "format": "double"
          },
          "invExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "baseCurrency": {
            "$ref": "#/components/schemas/CurrencyKey"
          },
          "foreignCurrency": {
            "$ref": "#/components/schemas/CurrencyKey"
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "adjustment": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "createdAt": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string"
          },
          "paid": {
            "type": "number",
            "format": "double"
          },
          "modifiedBy": {
            "type": "string"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "invoiceDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "InvoiceKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateInvoiceRequest": {
        "required": [
          "adjustment",
          "customer",
          "paid",
          "dueAmount",
          "discount",
          "invoiceDate"
        ],
        "type": "object",
        "properties": {
          "adjustment": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerKey"
          },
          "createdAt": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string"
          },
          "paid": {
            "type": "number",
            "format": "double"
          },
          "modifiedBy": {
            "type": "string"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "invoiceDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "UpdateInvoiceRequest": {
        "required": [
          "adjustment",
          "customer",
          "paid",
          "dueAmount",
          "discount",
          "invoiceDate"
        ],
        "type": "object",
        "properties": {
          "adjustment": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerKey"
          },
          "createdAt": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string"
          },
          "paid": {
            "type": "number",
            "format": "double"
          },
          "modifiedBy": {
            "type": "string"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "invoiceDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CategoryKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateCategoryRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateCategoryRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "profilePic": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          }
        }
      },
      "UserKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateUserRequest": {
        "required": [
          "email",
          "profilePic",
          "phoneNo",
          "name",
          "company"
        ],
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "profilePic": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyKey"
          }
        }
      },
      "UpdateUserRequest": {
        "required": [
          "email",
          "profilePic",
          "phoneNo",
          "name",
          "company"
        ],
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "profilePic": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyKey"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "altPhoneNo": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "CustomerKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateCustomerRequest": {
        "required": [
          "phoneNo",
          "invoices",
          "name"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "altPhoneNo": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceKey"
            }
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "UpdateCustomerRequest": {
        "required": [
          "phoneNo",
          "invoices",
          "name"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "altPhoneNo": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceKey"
            }
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ProductKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateProductRequest": {
        "required": [
          "name",
          "category"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryKey"
          }
        }
      },
      "UpdateProductRequest": {
        "required": [
          "name",
          "category"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryKey"
          }
        }
      },
      "VirtualEntity": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "VirtualEntityKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateVirtualEntityRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateVirtualEntityRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "currencyAbbr": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "currencySymbol": {
            "type": "string"
          },
          "currencyName": {
            "type": "string"
          }
        }
      },
      "CurrencyKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateCurrencyRequest": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "currencyAbbr": {
            "type": "string"
          },
          "currencySymbol": {
            "type": "string"
          },
          "currencyName": {
            "type": "string"
          }
        }
      },
      "UpdateCurrencyRequest": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "currencyAbbr": {
            "type": "string"
          },
          "currencySymbol": {
            "type": "string"
          },
          "currencyName": {
            "type": "string"
          }
        }
      },
      "Supplier": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "altPhoneNo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          }
        }
      },
      "SupplierKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateSupplierRequest": {
        "required": [
          "altPhoneNo",
          "name",
          "phoneNo"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "altPhoneNo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          }
        }
      },
      "UpdateSupplierRequest": {
        "required": [
          "altPhoneNo",
          "name",
          "phoneNo"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "altPhoneNo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          }
        }
      },
      "Inventory": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "id": {
            "type": "string"
          },
          "listingPrice": {
            "type": "number",
            "format": "double"
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "procurement": {
            "$ref": "#/components/schemas/Procurement"
          },
          "profit": {
            "type": "number",
            "format": "double"
          },
          "soldPrice": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "InventoryKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CreateInventoryRequest": {
        "required": [
          "cost",
          "product",
          "listingPrice",
          "invoice",
          "procurement",
          "soldPrice",
          "discount"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/ProductKey"
          },
          "listingPrice": {
            "type": "number",
            "format": "double"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceKey"
          },
          "procurement": {
            "$ref": "#/components/schemas/ProcurementKey"
          },
          "soldPrice": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "UpdateInventoryRequest": {
        "required": [
          "cost",
          "product",
          "listingPrice",
          "invoice",
          "procurement",
          "soldPrice",
          "discount"
        ],
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "format": "double"
          },
          "product": {
            "$ref": "#/components/schemas/ProductKey"
          },
          "listingPrice": {
            "type": "number",
            "format": "double"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceKey"
          },
          "procurement": {
            "$ref": "#/components/schemas/ProcurementKey"
          },
          "soldPrice": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          }
        }
      }
    }
  }
}